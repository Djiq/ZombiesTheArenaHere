<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_shield</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var hp_mult = 25;
path = path_add();
shield = instance_create(x,y,obj_shield);
hp = 50 + global.level * hp_mult;
alarm[0]=7;
maxhp=20;
spd = 0.5;
radius = 320
lvl = 0;
atkspeed = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_player)){


///Movement

var bullet_speed = 0;
var bullet_dmg = 1;
boundary = bullet_speed;
var CanSee = !collision_line(x,y,obj_player.x,obj_player.y,obj_wall,false,true);
var IsInsideRadius = distance_to_point(obj_player.x,obj_player.y) &lt; radius;
//Movement


if(CanSee and IsInsideRadius){
bullet_speed = 0.5;
if(alarm[0]&lt;=0){
image_angle = point_direction(x, y, obj_player.x, obj_player.y);
alarm[0]=15;
}
if(!CanSee){
image_angle=direction;
}
with(obj_shield){
x=obj_enemy_shield.x;
y=obj_enemy_shield.y;

image_angle = obj_shield.image_angle;
}
   move_towards_point(choose(obj_player.x-bullet_speed,obj_player.x-1,obj_player.x,obj_player.x+1,obj_player.x+bullet_speed),choose(obj_player.y-bullet_speed,obj_player.y-1,obj_player.y,obj_player.y+1,obj_player.y+bullet_speed),bullet_speed)
 mp_grid_path(obj_Game.grid_path,path,x,y,obj_player.x,obj_player.y,true);
  path_start(path,bullet_speed,path_action_stop,false);

} 


if(hp &lt;= 0) {
obj_player.gold += 125;
instance_create(x,y,blood);
instance_destroy(self);
with(obj_shield){instance_destroy()}
}
if(place_meeting(x,y,obj_player)){
obj_player.hp -= 0.5;



}
if(instance_exists(self)){
shield.x = x;
shield.y = y;
} else {
instance_destroy(shield);

}
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
