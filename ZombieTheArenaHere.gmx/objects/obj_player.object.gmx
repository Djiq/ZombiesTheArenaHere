<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = 0;
vsp = 0;
Fullsc = 0;
global.level = 0;
boss_killed_t = 0;
boss_killed = 0;
hp = 100;
alarm[1] = 10;
alarm[2]= 20;
stm = 100;
maxstm = 100;
mana = 100;
maxmana = 100;

gold = 0;

maxhp =100;
atkspeed = 6;
damage = 1;
spd = 2;
hpreg = 0.1;
Grenades = 0;

ricochet = 0;
piercing = 0;
blast_ammo = 0;
dt = 0;
hb = 0;
gre = 0;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_player)){
if(dt == 1){
sprite_index = spr_player_dt;

} else {

sprite_index = spr_player;

}


if(hp &lt;= 0) {
room_goto(room_end)
instance_destroy();
}

///Sterring
var movespeed = spd;
key_left =  -keyboard_check(ord("A"));
    
key_right =  keyboard_check(ord("D"));
hmove = key_left + key_right;
hsp = hmove * movespeed;
//Horizontal Collision
if (place_meeting(x+hsp,y,obj_wall))
{
    while(!place_meeting(x+sign(hsp),y,obj_wall))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;

key_down =  -keyboard_check(ord("W"));
    
key_up =  keyboard_check(ord("S"));
vmove = key_up  + key_down;
vsp = vmove * movespeed;
//Horizontal Collision
if (place_meeting(x,y+vsp,obj_wall))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;
if(hmove != 0 and vmove != 0){
movespeed = 3
} else { movespeed = 5;}
image_angle = point_direction(x, y, mouse_x, mouse_y);
if(hp &lt; maxhp){
hp += hpreg;
}
if(hp &gt; maxhp) hp = maxhp;

}




   
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if((alarm[0]&lt;0) and (mouse_check_button(mb_left))){
audio_play_sound(gunshot,2,false);
if(dt == 1){
instance_create(x + lengthdir_x(36, image_angle),
 y + lengthdir_y(25, image_angle-9),
  obj_bullet)

instance_create(x + lengthdir_x(50, image_angle) ,
 y + lengthdir_y(39, image_angle+9),
  obj_bullet)
} else {
instance_create(x + lengthdir_x(48, image_angle), y + lengthdir_y(48, image_angle), obj_bullet);

}
alarm[0] = atkspeed;
}
if(alarm[2] &lt; 0) {

alarm[2] = 0;
}
if(mouse_check_button(mb_right) &amp;&amp; alarm[2] &lt;= 0 &amp;&amp; Grenades &gt;= 1) {
Grenades -= 1;
instance_create(x,y,obj_grenade);
alarm[2] = 20;



}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pc = (hp/maxhp)*100;

draw_healthbar(64,100,512,128,pc,c_black,c_red,c_lime,0,true,true)
draw_text(80,64,string(gold));
draw_text(32,64,"Gold:");
draw_text(256,128,string(boss_killed));
draw_text(96,128,"Boss Zombies Killed:");
draw_text(256,160,string(damage));
draw_text(96,160,"Damage:");
draw_text(256,196,string(atkspeed));
draw_text(96,196,"Attack Speed:");
draw_text(256,228,string(hpreg));
draw_text(96,228,"HP regeneration:");
draw_text(256,256,string(spd));
draw_text(96,256,"Speed:");


draw_text(96,288,string(hp));
draw_text(128,288,"/");
draw_text(160,288,string(maxhp));
draw_text(32,288,"HP:");
draw_text(96,320,string(global.level));
draw_text(32,320,"Level:");
draw_text(128,352,string(Grenades));
draw_text(64,352,"Grenades:");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gold += 500;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
