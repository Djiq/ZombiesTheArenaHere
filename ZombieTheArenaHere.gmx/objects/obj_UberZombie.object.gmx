<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_UberZombie</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var hp_mult = 250;
path = path_add();
 rot1 = 360/6;
 rot2 = 360/6 + 360/6;
 rot3 = 360/6 + 360/6 + 360/6;
 rot4 = 360/6 + 360/6 + 360/6+ 360/6;
 rot5 = 360/6 + 360/6+ 360/6+ 360/6+ 360/6;
 rot6 = 360/6 + 360/6 + 360/6+ 360/6+ 360/6+ 360/6;

hp = 4000 + global.level * hp_mult;
alarm[0]=60;
alarm[2]=120;
maxhp=4000;
spd = 1;
radius = 1024
atkspeed = 3
phase = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
randomize();
if(instance_exists(obj_player)){
var bullet_speed = 0;
var bullet_dmg = 10;
boundary = bullet_speed;
var CanSee = !collision_line(x,y,obj_player.x,obj_player.y,obj_wall,false,true);
var IsInsideRadius = distance_to_point(obj_player.x,obj_player.y) &lt; radius;
//Movement


if(CanSee and IsInsideRadius){
bullet_speed = 0.25;
image_angle = point_direction(x, y, obj_player.x, obj_player.y);
    mp_grid_path(obj_Game.grid_path,path,x,y,obj_player.x,obj_player.y,true);
  path_start(path,bullet_speed,path_action_stop,false);

} 
if(!CanSee){
image_angle=direction;
}

if(hp &lt;= 0) {
obj_player.gold += 5000;
global.ukilled = 1;
instance_create(x,y,choose(obj_ricochet,obj_piercing,obj_double_trouble));
instance_create(x,y,obj_boss_blood);
instance_destroy(self);
}
if(place_meeting(x,y,obj_player)){
obj_player.hp -= 2;

}}
if(hp &lt;= maxhp/2){
phase = 2;

}


if(  CanSee and IsInsideRadius){
if(alarm[1]&lt;0){
audio_play_sound(e_gunshot,2,false);
if(phase == 2){
var r1 = random_range(0,360);
var r2 = random_range(0,360);
var r3 = random_range(0,360);
var r4 = random_range(0,360);

var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = image_angle+r1;
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = image_angle+r2;
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = image_angle+r3;


}
if (phase == 1) {
 
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = rot1;
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = rot2;
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = rot3;
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = rot4;
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = rot5;
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = rot6;
rot1 += 11;
rot2 += 11;
rot3 += 11;
rot4 += 11;
rot5 += 11;
rot6 += 11;

}
if(alarm[2]&lt;= 0){
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = image_angle-36;
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = image_angle-18;
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = image_angle;
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = image_angle+18;
var bullet = instance_create(x, y , obj_enemy_bullet);
bullet.direction = image_angle+36;
alarm[2]=120;
}
alarm[1]=atkspeed;
}}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

if(CanSee and IsInsideRadius){
var zmbie_w = choose(x+64,x+32,x,x-32,x+64);
var zmbie_h = choose(y+64,y+32,y,y-32,y+64);
if(alarm[0]=0){
alarm[0]= 360;

if(!position_meeting(zmbie_w,zmbie_h,obj_wall)){
instance_create(zmbie_w,zmbie_h,obj_enemy);


}else{
do{
zmbie_w = choose(obj_UberZombie.x+64,obj_UberZombie.x+32,obj_UberZombie.x,obj_UberZombie.x-32,obj_UberZombie.x+64);
zmbie_h = choose(obj_UberZombie.y+64,obj_UberZombie.y+32,obj_UberZombie.y,obj_UberZombie.y-32,obj_UberZombie.y+64);

}until(!position_meeting(zmbie_w,zmbie_h,obj_wall));
instance_create(zmbie_w,zmbie_h,obj_enemy);
}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
